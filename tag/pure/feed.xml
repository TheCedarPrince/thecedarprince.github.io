<?xml version="1.0" encoding="UTF-8"?>

<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:media="http://search.yahoo.com/mrss/"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:georss="http://www.georss.org/georss">

  <channel>
    <title>
      <![CDATA[  the cedar ledge  ]]>
    </title>
    <link> https://jacobzelko.com </link>
    <description>
      <![CDATA[  Jacob S. Zelko&#39;s personal website  ]]>
    </description>
    <atom:link
      href="https://jacobzelko.com/feed.xml"
      rel="self"
      type="application/rss+xml" />


<item>
  <title>
    <![CDATA[  Pure Functions in Programming  ]]>
  </title>
  <link> https://jacobzelko.com/11082021225843-pure-functions/index.html </link>
  <guid> https://jacobzelko.com/11082021225843-pure-functions/index.html </guid>
  <description>
    <![CDATA[  An attempted overview on what is meant by pure functions  ]]>
  </description>  
  
  <content:encoded>
    <![CDATA[  
<h1>Pure Functions in Programming</h1>
<p><strong>Date:</strong> November 8 2021</p>
<p><strong>Summary:</strong> An attempted overview on what is meant by pure functions</p>
<p><strong>Keywords:</strong> #pure #functions #functional #programming  #archive</p>
<h1>Bibliography</h1>
<p>Not Available</p>
<h1>Table of Contents</h1>
<div class="franklin-toc"><ol><li>References</li><li>References</li><li>Discussion: </li></ol></div>
<p>The definition of pure is somewhat of a moving target. Pure can mean many things and when applied to programming functions - even more so. Based on querying the <a href="https://jacobzelko.com/https://discourse.julialang.org/t/can-programming-in-julia-be-pure/71165">Julia community</a>, here was what I understood pure functions to be.</p>
<p>Based on Milewski&#39;s definition, &quot;A pure function is one in which the same result is always produced with no side effects given the same input.&quot; &#91;1&#93; <a href="https://jacobzelko.com/https://github.com/CameronBieganek">Cameron Bieganek</a> explained how, in Julia specifically, you can write functions that are &quot;probably&quot; pure. However, there is no real guarantee that a function is actually pure, because it depends on the various methods that have been implemented. I like the notion of &quot;probably&quot; pure as it encapsulates a more pragmatic approach to the internals of a given language. It lets one get away without having to necessarily be completely aware of all the internals when discussing purity.</p>
<p>Finally, pure functions are different from mathematical functions for the reason that mathematical functions map a value to another value. Pure functions written in a programming language involve more than just a mapping. &#91;1&#93;</p>
<h2 id="references">References</h2>
<h2 id="references__2">References</h2>
<p>&#91;1&#93; B. Milewski, Category Theory for Programmers, Version v1.3.0-0-g6bb0bc0. 2019.</p>
<h2 id="discussion">Discussion: </h2>
<script src="https://giscus.app/client.js"
    data-repo="TheCedarPrince/thecedarprince.github.io"
    data-repo-id="R_kgDOHRFrHA"
    data-category="General"
    data-category-id="DIC_kwDOHRFrHM4CPGIX"
    data-mapping="url"
    data-reactions-enabled="1"
    data-emit-metadata="0"
    data-input-position="top"
    data-theme="transparent_dark"
    data-lang="en"
    data-loading="lazy"
    crossorigin="anonymous"
    async>
</script>
 ]]>
  </content:encoded>
    
  <pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate>  
  
  
  <atom:author>
    <atom:name>Jacob Zelko</atom:name>
  </atom:author>
        
</item>
</channel></rss>