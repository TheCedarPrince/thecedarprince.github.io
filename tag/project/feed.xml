<?xml version="1.0" encoding="UTF-8"?>

<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:media="http://search.yahoo.com/mrss/"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:georss="http://www.georss.org/georss">

  <channel>
    <title>
      <![CDATA[  the cedar ledge  ]]>
    </title>
    <link> https://jacobzelko.com </link>
    <description>
      <![CDATA[  Jacob S. Zelko&#39;s personal website  ]]>
    </description>
    <atom:link
      href="https://jacobzelko.com/feed.xml"
      rel="self"
      type="application/rss+xml" />


<item>
  <title>
    <![CDATA[  Learning What Every Undergraduate Mathematician Should Know about Proofs  ]]>
  </title>
  <link> https://jacobzelko.com/04012023221538-learning-proofs-beginners/index.html </link>
  <guid> https://jacobzelko.com/04012023221538-learning-proofs-beginners/index.html </guid>
  <description>
    <![CDATA[  Ultralearning project to learn the equivalent of an undergraduate maths or computer science student understanding of proofs and how to write them.  ]]>
  </description>  
  
  <content:encoded>
    <![CDATA[  
<h1>Learning What Every Undergraduate Mathematician Should Know about Proofs</h1>
<p><strong>Date:</strong> April 1 2023</p>
<p><strong>Summary:</strong> Ultralearning project to learn the equivalent of an undergraduate maths or computer science student understanding of proofs and how to write them.</p>
<p><strong>Keywords:</strong> #zettel #archive #project #blog #proof</p>
<h1>Bibliography</h1>
<p>Not Available</p>
<h1>Table of Contents</h1>
<div class="franklin-toc"><ol><li><ol><li>Motivation</li><li>Project Goals<ol><li>What Am I Doing?<ol><li>Concepts</li></ol></li></ol></li><li>Roadmap</li></ol></li><li>How To Cite</li><li>References:</li><li>Discussion: </li></ol></div>
<h3 id="motivation">Motivation</h3>
<p>As I am personally moving into applied mathematics for my future graduate studies, I realized I had a deficiency. And that deficiency?  How to prove things&#33; &quot;Proof&quot; was always a somewhat scary thing that I encountered in mathematics every once in a while – but at the same time exciting. So, this post aims to allay these fears once and for all&#33;</p>
<h3 id="project_goals">Project Goals</h3>
<p>This process is adapted from the <a href="https://jacobzelko.com//07082020163004-ultralearning">Ultralearning framework posited by Scott Young</a>.</p>
<h4 id="what_am_i_doing">What Am I Doing?</h4>
<p>Gain an undergraduate level of understanding of proofs and proof creation on par with maths and computer science students.</p>
<h5 id="concepts">Concepts</h5>
<ul>
<li><p>Sets and Set Operations</p>
<ul>
<li><p>Set Notation</p>
</li>
<li><p>Union and Intersection</p>
</li>
<li><p>Complement and Subset</p>
</li>
<li><p>Power Sets</p>
</li>
</ul>
</li>
<li><p>Logical Structure in Proofs</p>
<ul>
<li><p>Implication and Equivalence</p>
</li>
<li><p>Logical Connectives &#40;And, Or, Not&#41;</p>
</li>
<li><p>De Morgan&#39;s Laws</p>
</li>
<li><p>Contrapositive, Converse, and Negation of Conditional Statements</p>
</li>
</ul>
</li>
<li><p>Quantifiers</p>
<ul>
<li><p>Universal Quantifier &#40;For All&#41;</p>
</li>
<li><p>Existential Quantifier &#40;There Exists&#41;</p>
</li>
<li><p>Uniqueness Quantifier &#40;There Exists Exactly One&#41;</p>
</li>
</ul>
</li>
<li><p>Proof Techniques</p>
<ul>
<li><p>Direct Proof</p>
</li>
<li><p>Proof by Contradiction</p>
</li>
<li><p>Proof by Contrapositive</p>
</li>
<li><p>Existence Proofs</p>
</li>
</ul>
</li>
<li><p>Induction and Recursion</p>
<ul>
<li><p>Principle of Mathematical Induction</p>
</li>
<li><p>Strong Induction</p>
</li>
<li><p>Recursive Definitions</p>
</li>
</ul>
</li>
<li><p>Relations and Functions</p>
<ul>
<li><p>Cartesian Product</p>
</li>
<li><p>Equivalence Relations</p>
</li>
<li><p>Partial and Total Orders</p>
</li>
<li><p>Injectivity, Surjectivity, and Bijectivity of Functions</p>
</li>
</ul>
</li>
<li><p>Cardinality and Countability</p>
<ul>
<li><p>Cardinality of Sets</p>
</li>
<li><p>Countable and Uncountable Sets</p>
</li>
<li><p>Diagonalization Argument</p>
</li>
</ul>
</li>
<li><p>Advanced Topics</p>
<ul>
<li><p>Constructive Mathematics</p>
</li>
<li><p>Proof Assistants</p>
</li>
<li><p>Zorn&#39;s Lemma and Well-Ordering Principle</p>
</li>
<li><p>Completeness Axiom and Real Numbers</p>
</li>
</ul>
</li>
</ul>
<h3 id="roadmap">Roadmap</h3>
<p>This is based on the Meta Learning step Young described as well as some additional tweaks of my own:</p>
<ul>
<li><p><strong>Outcomes:</strong> The knowledge and abilities you’ll need to acquire for success.</p>
</li>
<li><p><strong>Topic:</strong> The topic to learn</p>
</li>
<li><p><strong>Done:</strong> If this task has been completed &#40;X&#41; or not yet &#40;cell is empty&#41;</p>
</li>
</ul>
<table><tr><th align="right">Done</th><th align="right">Topic</th><th align="right">Outcomes</th></tr><tr><td align="right"></td><td align="right">Set Theory</td><td align="right">Understand basic set notation and operations, including subsets, set identities, and Cartesian products.</td></tr><tr><td align="right"></td><td align="right">Logic</td><td align="right">Understand propositional logic, including truth tables, implications, negations, and quantifiers.</td></tr><tr><td align="right"></td><td align="right">Proof Writing</td><td align="right">Develop skills in writing and constructing mathematical proofs, including direct and indirect proofs, proof by contradiction, proof by contrapositive, and proof by mathematical induction.</td></tr><tr><td align="right"></td><td align="right">Number Theory</td><td align="right">Understand basic number theory concepts, including divisibility, modular arithmetic, prime numbers, the fundamental theorem of arithmetic, the Euclidean algorithm, and Diophantine equations.</td></tr><tr><td align="right"></td><td align="right">Combinatorics</td><td align="right">Develop skills in combinatorial counting principles, including permutations, combinations, and the inclusion-exclusion principle.</td></tr><tr><td align="right"></td><td align="right">Analysis</td><td align="right">Develop skills in calculus, including limits, continuity, differentiation, integration, sequences, and series.</td></tr><tr><td align="right"></td><td align="right">Algebra</td><td align="right">Understand algebraic structures, including groups, rings, and fields.</td></tr></table>
<p>This table describes the very broad topics, resources I&#39;ll use, and the expected learning outcomes for each topic.  As I progress through this table, I will add an &quot;X&quot; to each row I have studied. Furthermore, the table is ordered by level of difficulty. </p>
<table><tr><th align="right">Done</th><th align="right">Skill Level</th><th align="right">Topic</th><th align="right">Concept</th></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Set Theory</td><td align="right">Sets and Elements</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Set Theory</td><td align="right">Set Notation</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Set Theory</td><td align="right">Subsets and Proper Subsets</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Set Theory</td><td align="right">Set Operations</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Set Theory</td><td align="right">Set Identities</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Set Theory</td><td align="right">Cartesian Products</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Logic</td><td align="right">Propositions and Logical Connectives</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Logic</td><td align="right">Truth Tables</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Logic</td><td align="right">Implication and Equivalence</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Logic</td><td align="right">Negation and De Morgan&#39;s Laws</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Logic</td><td align="right">Quantifiers</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Logic</td><td align="right">Logical Implication</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Proof Writing</td><td align="right">Proof Techniques</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Proof Writing</td><td align="right">Direct Proofs</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Proof Writing</td><td align="right">Indirect Proofs</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Proof Writing</td><td align="right">Proof by Contradiction</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Proof Writing</td><td align="right">Proof by Contrapositive</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Proof Writing</td><td align="right">Proof by Mathematical Induction</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Proof Writing</td><td align="right">Strong Induction</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Proof Writing</td><td align="right">Structural Induction</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Proof Writing</td><td align="right">Proof by Cases</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Proof Writing</td><td align="right">Existence and Uniqueness Proofs</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Proof Writing</td><td align="right">Counterexamples</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Number Theory</td><td align="right">Divisibility and Modular Arithmetic</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Number Theory</td><td align="right">GCD and LCM</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Number Theory</td><td align="right">Prime Numbers</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Number Theory</td><td align="right">Fundamental Theorem of Arithmetic</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Number Theory</td><td align="right">Euclidean Algorithm</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Number Theory</td><td align="right">Diophantine Equations</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Combinatorics</td><td align="right">Counting Principles</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Combinatorics</td><td align="right">Pigeonhole Principle</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Combinatorics</td><td align="right">Permutations and Combinations</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Combinatorics</td><td align="right">Inclusion-Exclusion Principle</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Combinatorics</td><td align="right">Recurrence Relations</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Combinatorics</td><td align="right">Generating Functions</td></tr><tr><td align="right"></td><td align="right">Advanced</td><td align="right">Analysis</td><td align="right">Limits and Continuity</td></tr><tr><td align="right"></td><td align="right">Advanced</td><td align="right">Analysis</td><td align="right">Differentiation</td></tr><tr><td align="right"></td><td align="right">Advanced</td><td align="right">Analysis</td><td align="right">Integration</td></tr><tr><td align="right"></td><td align="right">Advanced</td><td align="right">Analysis</td><td align="right">Sequences and Series</td></tr><tr><td align="right"></td><td align="right">Advanced</td><td align="right">Algebra</td><td align="right">Groups</td></tr><tr><td align="right"></td><td align="right">Advanced</td><td align="right">Algebra</td><td align="right">Rings and Fields</td></tr></table>
<p>This table gets more into exact topics and concepts to master. They have an associated difficult level and overall topic. Moreover, this a synthesis of concepts and topics to be covered based on class syllabi from:</p>
<ul>
<li><p>MA307: Introduction to Proof &#40;taught by Dan Dugger at University of Oregon&#41;</p>
</li>
<li><p>300:T6 Introduction to Mathematical Reasoning &#40;taught by Chloe Urbanski Wawrzyniak at Rutgers University&#41;</p>
</li>
<li><p>Introduction to Proof-based Discrete Mathematics &#40;taught by Matthew Gelvin at University of Chicago&#41;</p>
</li>
<li><p>MATH 301: Introduction To Proofs &#40;taught by Emily Riehl at John Hopkins University&#41;</p>
</li>
</ul>
<p>Additionally, in the construction of this project, I&#39;d like to thank John Carlos Baez for some of his suggestions&#33;</p>
<h2 id="how_to_cite">How To Cite</h2>
<p>Zelko, Jacob. <em>Learning What Every Undergraduate Mathematician Should Know about Proofs</em>. <a href="https://jacobzelko.com/04012023221538-learning-proofs-beginners">https://jacobzelko.com/04012023221538-learning-proofs-beginners</a>. April 1 2023.</p>
<h2 id="references">References:</h2>
<h2 id="discussion">Discussion: </h2>
<script>talkyardServerUrl='https://site-vbm8wbc57o.talkyard.net';</script>
<script async defer src="https://c1.ty-cdn.net/-/talkyard-comments.min.js"></script>
<div class="talkyard-comments" data-discussion-id="" style="margin-top: 45px;">
    <noscript>Please enable Javascript to view comments.</noscript>
    <p style="margin-top: 25px; opacity: 0.9; font-size: 96%">Comments powered by
    <a href="https://www.talkyard.io">Talkyard</a>.</p>
</div> ]]>
  </content:encoded>
    
  <pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate>  
  
  
  <atom:author>
    <atom:name>Jacob Zelko</atom:name>
  </atom:author>
        
</item>

<item>
  <title>
    <![CDATA[  Making Math Flashcards Using Spaced Repetition Systems  ]]>
  </title>
  <link> https://jacobzelko.com/01072023041127-making-math-anki/index.html </link>
  <guid> https://jacobzelko.com/01072023041127-making-math-anki/index.html </guid>
  <description>
    <![CDATA[  Composite guide in using spaced repetition systems in learning maths  ]]>
  </description>  
  
  <content:encoded>
    <![CDATA[  
<h1>Making Math Flashcards Using Spaced Repetition Systems</h1>
<p><strong>Date:</strong> January 6 2023</p>
<p><strong>Summary:</strong> Composite guide in using spaced repetition systems in learning maths</p>
<p><strong>Keywords:</strong> #math #learning #anki #flashcards #spaced #repetition #proofs #theorems #definitions #project #archive #blog</p>
<h1>Bibliography</h1>
<p>Not Available</p>
<h1>Table of Contents</h1>
<div class="franklin-toc"><ol><li><ol><li>Motivation</li><li>Introduction</li><li>Principles in Making Anki Cards for Maths</li><li>Card Types<ol><li>Definitions</li><li>Properties</li><li>Theorems<ol><li>Implication Only Theorems</li><li>Implication and Equivalence Theorems</li></ol></li></ol></li><li>Self Testing</li><li>The &quot;Ankification&quot; of Proofs<ol><li>Initial Glances of a Proof</li><li>Building Out a Conceptual Roadmap of a Proof</li><li>Consider the Alternatives of a Proof</li></ol></li><li>Conclusion</li></ol></li><li>How To Cite</li><li>References:</li><li>Discussion: </li></ol></div>
<h3 id="motivation">Motivation</h3>
<p>A major goal in my life is to get better with studying maths. As I fully intend to study mathematics more rigorously, a powerful component and tool in my studying toolbox has been Spaced Repetition Systems like Anki or Memrise. In particular, I wanted to know how to use these sort of systems to study and retain math more effectively in my studies – which sometimes face unexpected interruptions. This post serves as a guide to do just that.</p>
<h3 id="introduction">Introduction</h3>
<p>TODO: Add this discussion into here How I operate is that Anki is a supplement to my learning and not the whole piece. For example, I use Anki to learn definitions and their properties, but then when I work on proofs, I usually scribble that down into my notes and then try my best at linking together different definitions until I have something pleasant. &#91;11:51 AM&#93;TheCedarPrince: I say “linking” intentionally as my notes are stored within a Zettelkasten where each of the definitions I’ve learned are also found. So then I weave together the notes quickly into longer form pieces or proofs or what have you &#91;11:52 AM&#93;TheCedarPrince: Let me know if you have any questions — happy to hear your thoughts&#33;</p>
<h3 id="principles_in_making_anki_cards_for_maths">Principles in Making Anki Cards for Maths</h3>
<p>These principles are curated specifically to think about maths and Anki:</p>
<ol>
<li><p>Anki is a complement to learning – it is not the whole process of learning.</p>
</li>
</ol>
<p>With maths, it is required to sit down, to struggle, and fully work through concepts. Anki is at best a complement to help you remember what you have learned or know.  At worst, a distraction that one ends up frustrated with as one is not seeing the progress they want to see.</p>
<ol start="2">
<li><p>Add small pieces that are worth remembering to Anki.</p>
</li>
</ol>
<p>Keep <a href="https://jacobzelko.com/03092020031618-zettelkasten-principles">Anki pieces as atomic as possible &#40;see the linked note and think of them as Anki cards instead of &quot;zettels&quot;&#41;</a>. &#91;1&#93;</p>
<ol start="3">
<li><p>Be brutally honest in marking an Anki review. &#91;1&#93;</p>
</li>
<li><p>Good cards lead to good results – take the time on making good cards. &#91;1&#93;</p>
</li>
<li><p>If having problems with a certain topic or set of questions, break the topic down to the smallest components possible to better understand the overall topic. &#91;2&#93;</p>
</li>
</ol>
<p>Identify the <a href="https://jacobzelko.com/07082020163004-ultralearning">facts, procedures, and concepts</a> and try to use those in creating smaller supplementary cards to help you with a concept. &#91;3&#93;</p>
<h3 id="card_types">Card Types</h3>
<p>In maths, there are many different types of things to learn. Accordingly, there are a few different types of cards that are useful to make this learning process easier.</p>
<h4 id="definitions">Definitions</h4>
<p>In learning definitions, some useful principles to keep in mind in constructing Anki cards that test definitions are the following:</p>
<ul>
<li><p>A definition can usually be broken down across the following parts:</p>
</li>
</ul>
<pre><code class="language-julia">- The object to be defined
- Its descriptor &#40;this is a unique definition for this object&#41;
- Notation conventions for this object
- Properties associated with the object 
- Any context that the object may be associated with &#40;e.g. when exploring a set, are we talking about sets with in ZFC Set Theory or within the category of &#36;Set&#36;?&#41; &#91;4&#93;</code></pre>
<ul>
<li><p>There can be many different definitions for the same object</p>
</li>
</ul>
<pre><code class="language-julia">- In this case, create different cards for each different definition</code></pre>
<ul>
<li><p>Use clozes liberally to study each part of a given definition &#91;5&#93;</p>
</li>
</ul>
<p>TODO: Include example note outline here</p>
<h4 id="properties">Properties</h4>
<p>TODO: Add what I have learned about property cards TODO: Include example note outline here </p>
<h4 id="theorems">Theorems</h4>
<p>As identified in &#91;4&#93;, there are typically two types of theorems: <em>Implication Only</em> and <em>Implication and Equivalency</em>.</p>
<h5 id="implication_only_theorems">Implication Only Theorems</h5>
<p><em>Implication Only</em> theorems have the quality that the conditions associated with that particular theorem, when satisfied, imply specific conclusions. Similar to making cards for definitions, there are some principles that can be followed for these sorts of cards:</p>
<ul>
<li><p>An <em>Implication Only</em> theorem can be broken down across the following parts:</p>
</li>
</ul>
<pre><code class="language-julia">- The theorem name to be defined
- Its descriptor &#40;the definition for this theorem&#41;
- Any context that the theorem may be associated with 
- Notation conventions for this object
- Conditions of the theorem
- Conclusions from this theorem</code></pre>
<h5 id="implication_and_equivalence_theorems">Implication and Equivalence Theorems</h5>
<p><em>Implication and Equivalence</em> theorems possess the virtue where if an associated set of conditions are met, imply that two or more arbitrary statements can be equivalent. &#91;4&#93; Making cards for this type of theorem is almost identical to making cards for definitions. The only key difference is that one should also add fields for the equivalent statements that result from this theorem.</p>
<h3 id="self_testing">Self Testing</h3>
<p>TODO: Add section based on question cards  TODO: Include example note outline here</p>
<h3 id="the_ankification_of_proofs">The &quot;Ankification&quot; of Proofs</h3>
<p>Michael Nielsen wrote an excellent piece on this process called <a href="https://cognitivemedium.com/srs-mathematics">&quot;Using spaced repetition systems to see through a piece of mathematics&quot;</a>.  Basically, he proposes the use of Anki to deeply understand and study proofs. Personally for me, I am not yet confident in an approach to draft proofs in Anki form. I <a href="https://jacobzelko.com/01162023063211-ankification-proofs">took notes on Nielsen&#39;s &quot;Ankification&quot; and processing of a proof</a> and am including some digested thoughts he had on working through proofs.</p>
<h4 id="initial_glances_of_a_proof">Initial Glances of a Proof</h4>
<ul>
<li><p>Pick out single elements of a proof</p>
</li>
<li><p>Convert these elements to Anki cards</p>
</li>
</ul>
<p>As you pick out these elements and create cards, they may be able to be formulated into definition cards. Or, they may be needed to become their own special sort of card or fact – anything that can help in the learning process.</p>
<h4 id="building_out_a_conceptual_roadmap_of_a_proof">Building Out a Conceptual Roadmap of a Proof</h4>
<p>A proof is not a linear list of statements.  Per Nielsen, it is much more valuable to think of it as relationships between simple observations.  Each of these connections between observations are not just made for no reason. Rather, determine how to find multiple ways to think of the same observation or come to the same observation that is useful for a proof. At this stage, we are beginning to learn our way comfortably around a proof and finding multiple ways to get to each step in a proof is imperative in building that comfort.</p>
<h4 id="consider_the_alternatives_of_a_proof">Consider the Alternatives of a Proof</h4>
<p>Once you have built significant comfort with a proof, keep considering different aspects of the proof. Consider the alternatives within this proof – if this assumption were changed or that context was altered, what are the ramifications of this proof? This process can continue endlessly but should only stop when you are wholly confident in your understandings of a give proof.</p>
<h3 id="conclusion">Conclusion</h3>
<p>To conclude, this short guide is by no means exhaustive. Instead, I made this as a short reference for myself in studying maths using a spaced repetition learning process. I&#39;ll certainly come back to revise this as I continue to work and go through the maths I study to share what works for me.</p>
<h2 id="how_to_cite">How To Cite</h2>
<p>Zelko, Jacob. <em>Making Math Flashcards Using Spaced Repetition Systems</em>. <a href="https://jacobzelko.com/01072023041127-making-math-anki">https://jacobzelko.com/01072023041127-making-math-anki</a>. January 6 2023.</p>
<h2 id="references">References:</h2>
<p>&#91;1&#93; “&#91;Guide&#93; How to Anki Maths the right way,” 31-Jan-2016. &#91;Online&#93;. Available: https://www.reddit.com/r/Anki/comments/43mf83/guide<em>how</em>to<em>anki</em>maths<em>the</em>right_way/. &#91;Accessed: 09-Jan-2023&#93;.</p>
<p>&#91;2&#93; M. Nielsen, “Using spaced repetition systems to see through a piece of mathematics,” 2019. &#91;Online&#93;. Available: http://cognitivemedium.com/srs-mathematics.</p>
<p>&#91;3&#93; S. Young, Ultralearning. HarperCollins Publishers, 2019.</p>
<p>&#91;4&#93; L. Thorburn, “Using Anki for mathematics,” 08-Mar-2020. &#91;Online&#93;. Available: https://www.lukethorburn.com/anki/. &#91;Accessed: 09-Jan-2023&#93;.</p>
<p>&#91;5&#93; A. Milchior, “How I use Anki to learn mathematics - LessWrong,” 07-Dec-2016. &#91;Online&#93;. Available: https://www.lesswrong.com/posts/8ZugMc4E5959Xh86i/how-i-use-anki-to-learn-mathematics. &#91;Accessed: 09-Jan-2023&#93;.</p>
<h2 id="discussion">Discussion: </h2>
<script>talkyardServerUrl='https://site-vbm8wbc57o.talkyard.net';</script>
<script async defer src="https://c1.ty-cdn.net/-/talkyard-comments.min.js"></script>
<div class="talkyard-comments" data-discussion-id="" style="margin-top: 45px;">
    <noscript>Please enable Javascript to view comments.</noscript>
    <p style="margin-top: 25px; opacity: 0.9; font-size: 96%">Comments powered by
    <a href="https://www.talkyard.io">Talkyard</a>.</p>
</div> ]]>
  </content:encoded>
    
  <pubDate>Fri, 06 Jan 2023 00:00:00 +0000</pubDate>  
  
  
  <atom:author>
    <atom:name>Jacob Zelko</atom:name>
  </atom:author>
        
</item>

<item>
  <title>
    <![CDATA[  Achieving an Undergraduate Level Understanding of Graph Theory   ]]>
  </title>
  <link> https://jacobzelko.com/01012023000122-graph-theory-learning/index.html </link>
  <guid> https://jacobzelko.com/01012023000122-graph-theory-learning/index.html </guid>
  <description>
    <![CDATA[  Ultralearning project to learn the equivalent of an undergraduate maths of computer science student understanding of graph theory.  ]]>
  </description>  
  
  <content:encoded>
    <![CDATA[  
<h1>Achieving an Undergraduate Level Understanding of Graph Theory</h1>
<p><strong>Date:</strong> December 31 2022</p>
<p><strong>Summary:</strong> Ultralearning project to learn the equivalent of an undergraduate maths of computer science student understanding of graph theory.</p>
<p><strong>Keywords:</strong> #zettel #ultralearning #graph #theory #project #archive #blog</p>
<h1>Bibliography</h1>
<p>Not Available</p>
<h1>Table of Contents</h1>
<div class="franklin-toc"><ol><li><ol><li><ol><li><ol><li>Procedures</li></ol></li></ol></li><li>Roadmap</li></ol></li><li>How To Cite</li><li>References:</li><li>Discussion: </li></ol></div>
<h3>Motivation</h3>
<p>I have always found graph theory interesting ever since I was exposed to it back in my undergraduate studies at Georgia Tech. I found out about it through SIR Modeling but personally found the structure of graphs far more fascinating than its application to SIR models. Furthermore, as I intend to be pursuing graduate studies in applied mathematics, why not get started with trying to understand it?</p>
<h3>Project Goals</h3>
<p>This process is adapted from the <a href="https://jacobzelko.com/07082020163004-ultralearning">Ultralearning framework posited by Scott Young</a>.</p>
<h4>What Am I Doing?</h4>
<p>Gain an undergraduate level of understanding of graph theory on par with maths and computer science students.</p>
<h5>Concepts</h5>
<ul>
<li><p>Basic concepts:</p>
<ul>
<li><p>Definition of a graph and its components:</p>
<ul>
<li><p>Understand the components of a graph and the differences between directed and undirected graphs.</p>
</li>
</ul>
</li>
<li><p>Subgraphs and isomorphism:</p>
<ul>
<li><p>Understand the definitions of subgraphs and isomorphism and be able to identify and compare them in a given graph.</p>
</li>
</ul>
</li>
<li><p>Directed graphs:</p>
<ul>
<li><p>Understand the definition of a directed graph and be able to represent it using adjacency and incidence matrices.</p>
</li>
</ul>
</li>
<li><p>Graphs and their properties:</p>
<ul>
<li><p>Understand various properties of graphs and be able to apply them to analyze and classify different types of graphs.</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Connectivity:</p>
<ul>
<li><p>Paths and circuits:</p>
<ul>
<li><p>Understand the definitions of paths and circuits and be able to identify and construct them in a given graph.</p>
</li>
</ul>
</li>
<li><p>Connectedness and components:</p>
<ul>
<li><p>Understand the concept of connectedness and be able to determine whether a graph is connected or disconnected.</p>
</li>
<li><p>Understand the concept of graph components and be able to identify them in a given graph.</p>
</li>
</ul>
</li>
<li><p>Distance in graphs:</p>
<ul>
<li><p>Understand the concept of distance between vertices and be able to compute it using various measures.</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Trees:</p>
<ul>
<li><p>Trees and their properties:</p>
<ul>
<li><p>Understand the definition of a tree and be able to identify and distinguish trees from other types of graphs.</p>
</li>
</ul>
</li>
<li><p>Rooted trees and binary trees:</p>
<ul>
<li><p>Understand the concept of rooted trees and be able to construct and manipulate them.</p>
</li>
<li><p>Understand the concept of binary trees and be able to construct and manipulate them.</p>
</li>
</ul>
</li>
<li><p>Spanning trees</p>
</li>
</ul>
</li>
<li><p>Matrix representations of graphs:</p>
<ul>
<li><p>Adjacency matrices:</p>
<ul>
<li><p>Understand the concept of an adjacency matrix and be able to represent a graph using an adjacency matrix.</p>
</li>
</ul>
</li>
<li><p>Incidence matrices:</p>
<ul>
<li><p>Understand the concept of an incidence matrix and be able to represent a graph using an incidence matrix.</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Graph algorithms:</p>
<ul>
<li><p>Breadth-first search:</p>
<ul>
<li><p>Understand the concept of breadth-first search and be able to implement it to traverse a graph.</p>
</li>
</ul>
</li>
<li><p>Depth-first search:</p>
<ul>
<li><p>Understand the concept of depth-first search and be able to implement it to traverse a graph.</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Planar graphs:</p>
<ul>
<li><p>Planar graphs and their properties:</p>
<ul>
<li><p>Understand the definition of a planar graph and the properties that distinguish planar graphs from other types of graphs.</p>
</li>
</ul>
</li>
<li><p>Euler&#39;s formula:</p>
<ul>
<li><p>Understand Euler&#39;s formula and be able to apply it to analyze the structure of planar graphs.</p>
</li>
</ul>
</li>
<li><p>Dual graphs:</p>
<ul>
<li><p>Understand the concept of a dual graph and be able to construct the dual of a given planar graph.</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Coloring graphs:</p>
<ul>
<li><p>Vertex coloring:</p>
<ul>
<li><p>Understand the concept of vertex coloring and be able to color the vertices of a given graph according to various coloring schemes.</p>
</li>
</ul>
</li>
<li><p>Edge coloring:</p>
<ul>
<li><p>Understand the concept of edge coloring and be able to color the edges of a given graph according to various coloring schemes.</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Matchings and factors:</p>
<ul>
<li><p>Matchings:</p>
<ul>
<li><p>Understand the concept of a matching in a graph and be able to identify and construct matchings in a given graph.</p>
</li>
</ul>
</li>
<li><p>Factors:</p>
<ul>
<li><p>Understand the concept of a factor in a graph and be able to identify and construct factors in a given graph.</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>More advanced topics:</p>
<ul>
<li><p>Hamiltonian cycles:</p>
<ul>
<li><p>Understand the concept of a Hamiltonian cycle and be able to identify and construct Hamiltonian cycles in a given graph.</p>
</li>
</ul>
</li>
<li><p>Network flows:</p>
<ul>
<li><p>Understand the concept of network flows and be able to model and analyze flow problems in graphs.</p>
</li>
</ul>
</li>
<li><p>Graphs and groups:</p>
<ul>
<li><p>Understand the connection between graphs and group theory, and be able to apply group-theoretic techniques to analyze graphs.</p>
</li>
</ul>
</li>
<li><p>Graphs and logic:</p>
<ul>
<li><p>Understand the connection between graphs and logic, and be able to apply logical techniques to analyze graphs.</p>
</li>
</ul>
</li>
<li><p>Graphs and geometry:</p>
<ul>
<li><p>Understand the connection between graphs and geometry, and be able to apply geometric techniques to analyze graphs.</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h5>Facts</h5>
<ul>
<li><p>Definition of a graph and its components:</p>
<ul>
<li><p>Vertices &#40;also called nodes&#41;.</p>
</li>
<li><p>Edges.</p>
</li>
<li><p>Weights.</p>
</li>
<li><p>Labels.</p>
</li>
</ul>
</li>
<li><p>Subgraphs and isomorphism.</p>
</li>
<li><p>Directed graphs and their representations:</p>
<ul>
<li><p>Adjacency matrices.</p>
</li>
<li><p>Incidence matrices.</p>
</li>
</ul>
</li>
<li><p>Graph properties:</p>
<ul>
<li><p>Connected/disconnected.</p>
</li>
<li><p>Bipartite/not bipartite.</p>
</li>
<li><p>Cyclic/acyclic.</p>
</li>
</ul>
</li>
<li><p>Paths and circuits.</p>
</li>
<li><p>Connectedness and components.</p>
</li>
<li><p>Distance between vertices.</p>
</li>
<li><p>Trees:</p>
<ul>
<li><p>Definition.</p>
</li>
<li><p>Unique path between vertices.</p>
</li>
<li><p>Root vertex.</p>
</li>
<li><p>Branches.</p>
</li>
</ul>
</li>
<li><p>Additional topics:</p>
<ul>
<li><p>Matrix representations:</p>
<ul>
<li><p>Adjacency matrices.</p>
</li>
<li><p>Incidence matrices.</p>
</li>
</ul>
</li>
<li><p>Graph algorithms:</p>
<ul>
<li><p>Breadth-first search.</p>
</li>
<li><p>Depth-first search.</p>
</li>
</ul>
</li>
<li><p>Planar graphs and their properties:</p>
<ul>
<li><p>Definition of a planar graph.</p>
</li>
<li><p>Properties that distinguish planar graphs from other types of graphs.</p>
</li>
<li><p>Euler&#39;s formula.</p>
</li>
<li><p>Dual graphs.</p>
</li>
</ul>
</li>
<li><p>Tree properties:</p>
<ul>
<li><p>Rooted trees.</p>
</li>
<li><p>Binary trees.</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h5 id="procedures">Procedures</h5>
<ol>
<li><p>Representing graphs using different notations &#40;e.g. adjacency lists, adjacency matrices, incidence matrices&#41;.</p>
</li>
<li><p>Traversing graphs using different algorithms &#40;e.g. breadth-first search, depth-first search&#41;.</p>
</li>
<li><p>Analyzing the properties of graphs &#40;e.g. connectedness, bipartiteness, acyclicity&#41;.</p>
</li>
<li><p>Finding paths and circuits in graphs.</p>
</li>
<li><p>Identifying and constructing different types of trees &#40;e.g. rooted trees, binary trees&#41;.</p>
</li>
<li><p>Coloring the vertices or edges of a graph according to various coloring schemes &#40;e.g. vertex coloring, edge coloring&#41;.</p>
</li>
<li><p>Finding matchings and factors in graphs.</p>
</li>
<li><p>Identifying and constructing Hamiltonian cycles in graphs.</p>
</li>
<li><p>Modeling and analyzing flow problems in graphs using network flows.</p>
</li>
<li><p>Applying group-theoretic and logical techniques to analyze graphs.</p>
</li>
<li><p>Applying geometric techniques to analyze graphs.</p>
</li>
</ol>
<h3 id="roadmap">Roadmap</h3>
<p>This is based on the Meta Learning step Young described as well as some additional tweaks of my own:</p>
<ul>
<li><p><strong>Outcomes:</strong> The knowledge and abilities you’ll need to acquire for success.</p>
</li>
<li><p><strong>Rationale:</strong> Know exactly why you want to learn a skill or subject.</p>
</li>
<li><p><strong>Resources:</strong> The resources you’ll use when learning.</p>
</li>
<li><p><strong>Done:</strong> If this task has been completed &#40;X&#41; or not yet &#40;cell is empty&#41;</p>
</li>
</ul>
<table><tr><th align="right">Done</th><th align="right">Topic</th><th align="right">Resources</th><th align="right">Outcomes</th></tr><tr><td align="right"></td><td align="right">Definition of a graph and its components</td><td align="right">&#91;1&#93;, &#91;2&#93;</td><td align="right">Graph components; differences between directed and undirected graphs</td></tr><tr><td align="right"></td><td align="right">Subgraphs and isomorphism</td><td align="right">&#91;1&#93;, &#91;2&#93;</td><td align="right">Subgraphs; isomorphism; identify and compare given graphs</td></tr><tr><td align="right"></td><td align="right">Directed graphs</td><td align="right">&#91;2&#93;</td><td align="right">Directed graph; representation using adjacency and incidence matrices</td></tr><tr><td align="right"></td><td align="right">Graphs and their properties</td><td align="right">&#91;1&#93;, &#91;2&#93;</td><td align="right">Properties of graphs; analyze; classify different types of graphs</td></tr><tr><td align="right"></td><td align="right">Paths and circuits</td><td align="right">&#91;1&#93;, &#91;2&#93;</td><td align="right">Paths and circuits; identify and construct given graph</td></tr><tr><td align="right">X</td><td align="right">Connectedness and components</td><td align="right">&#91;1&#93;</td><td align="right">Determine if graph is connected; identify graph components</td></tr><tr><td align="right"></td><td align="right">Distance in graphs</td><td align="right">&#91;1&#93;, &#91;2&#93;</td><td align="right">Vertex distances; compute vertex distances</td></tr><tr><td align="right"></td><td align="right">Trees and their properties</td><td align="right">&#91;1&#93;, &#91;2&#93;</td><td align="right">Tree definitions; identify trees; distinguish trees</td></tr><tr><td align="right"></td><td align="right">Rooted trees and binary trees</td><td align="right">&#91;1&#93;, &#91;2&#93;</td><td align="right">Rooted trees; construct and manipulate rooted trees</td></tr><tr><td align="right"></td><td align="right">Adjacency matrices</td><td align="right">&#91;1&#93;</td><td align="right">Adjacency matrix concept; representation of adjacency matrix</td></tr><tr><td align="right"></td><td align="right">Incidence matrices</td><td align="right">&#91;1&#93;</td><td align="right">Incidence matrix concept; representation of incidence graphs</td></tr><tr><td align="right"></td><td align="right">Breadth-first search</td><td align="right">&#91;1&#93;, &#91;2&#93;</td><td align="right">Breadth-first search concept; graph traversal</td></tr><tr><td align="right"></td><td align="right">Depth-first search</td><td align="right">&#91;1&#93;, &#91;2&#93;</td><td align="right">Depth-first search concept; graph traversal</td></tr><tr><td align="right"></td><td align="right">Planar graphs and their properties</td><td align="right">&#91;1&#93;</td><td align="right">Planar graph definition; properties</td></tr><tr><td align="right"></td><td align="right">Euler&#39;s formula</td><td align="right">&#91;1&#93;, &#91;2&#93;</td><td align="right">Euler&#39;s formula; structure of planar graphs</td></tr><tr><td align="right"></td><td align="right">Dual graphs</td><td align="right">&#91;1&#93;</td><td align="right">Dual graph concept; construction of dual graph</td></tr><tr><td align="right"></td><td align="right">Vertex coloring</td><td align="right">&#91;1&#93;, &#91;2&#93;</td><td align="right">Vertex coloring concept; coloring of graph vertices</td></tr><tr><td align="right"></td><td align="right">Edge coloring</td><td align="right">&#91;1&#93;, &#91;2&#93;</td><td align="right">Edge coloring concept; coloring of graph edges</td></tr><tr><td align="right"></td><td align="right">Matchings</td><td align="right">&#91;1&#93;, &#91;2&#93;</td><td align="right">Matching concept; identification and construction</td></tr><tr><td align="right"></td><td align="right">Factors</td><td align="right">&#91;1&#93;</td><td align="right">Factor concept; identification and construction</td></tr><tr><td align="right"></td><td align="right">Hamiltonian cycles</td><td align="right">&#91;1&#93;, &#91;2&#93;</td><td align="right">Hamiltonian cycle concept; identification and construction</td></tr><tr><td align="right"></td><td align="right">Network flows</td><td align="right">&#91;1&#93;</td><td align="right">Network flow concept; modeling and analysis</td></tr><tr><td align="right"></td><td align="right">Graphs and groups</td><td align="right">&#91;2&#93;</td><td align="right">Graph and group theory connection; analysis</td></tr><tr><td align="right"></td><td align="right">Graphs and logic</td><td align="right">&#91;2&#93;</td><td align="right">Graph and logic connection; analysis</td></tr><tr><td align="right"></td><td align="right">Graphs and geometry</td><td align="right">&#91;2&#93;</td><td align="right">Graph and geometry connection; analysis</td></tr></table>
<p>This table describes the very broad topics, resources I&#39;ll use, and the expected learning outcomes for each topic.  As I progress through this table, I will add an &quot;X&quot; to each row I have studied. Furthermore, the table is ordered by level of difficulty with &quot;Definition of a graph and its components&quot; being the first topic I should learn and &quot;Graphs and geometry&quot; being the more advanced topics I should study. The topics and resources here are based on &#91;1&#93; and &#91;2&#93; with potentially more resources to add in the future.</p>
<table><tr><th align="right">Done</th><th align="right">Skill Level</th><th align="right">Topic</th><th align="right">Concept</th></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Fundamental concepts</td><td align="right">Paths</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Fundamental concepts</td><td align="right">Cycles</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Fundamental concepts</td><td align="right">Subgraphs</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Fundamental concepts</td><td align="right">Isomorphism</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Trees</td><td align="right">Spanning trees</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Connectivity</td><td align="right">Max-flow Min-cut theorem</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Connectivity</td><td align="right">Menger&#39;s theorem</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Eulerian and Hamiltonian graphs</td><td align="right">Eulerian and Hamiltonian graphs</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Matchings</td><td align="right">Hall&#39;s theorem</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Matchings</td><td align="right">Tutte&#39;s 1-factor theorem</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Colorings</td><td align="right">Greedy coloring</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Colorings</td><td align="right">Chromatic polynomial</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Planar graphs</td><td align="right">Euler&#39;s formula</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Planar graphs</td><td align="right">Kuratowski&#39;s theorem</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Planar graphs</td><td align="right">Equivalents of the 4-color theorem</td></tr><tr><td align="right"></td><td align="right">Beginner</td><td align="right">Ramsey theory</td><td align="right">Ramsey&#39;s theorem</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Structure of 1-, 2-, 3-connected graphs</td><td align="right">Blocks</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Structure of 1-, 2-, 3-connected graphs</td><td align="right">Ear-decomposition</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Structure of 1-, 2-, 3-connected graphs</td><td align="right">Contractible edges</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Perfect graphs</td><td align="right">Bipartite graphs</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Perfect graphs</td><td align="right">Comparability graphs</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Tutte&#39;s synthesis of 3-connected graphs</td><td align="right">Tutte&#39;s synthesis of 3-connected graphs</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Systems of distinct representatives</td><td align="right">Systems of distinct representatives</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Matching polytope</td><td align="right">Matching polytope</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Chinese postman problem</td><td align="right">Chinese postman problem</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Dual graphs</td><td align="right">Dual graphs</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Graphs on surfaces</td><td align="right">Graphs on surfaces</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Highly chromatic graphs of large girth</td><td align="right">Highly chromatic graphs of large girth</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Vizing&#39;s theorem</td><td align="right">Vizing&#39;s theorem</td></tr><tr><td align="right"></td><td align="right">Intermediate</td><td align="right">Erdos-de Bruijn compactness theorem</td><td align="right">Erdos-de Bruijn compactness theorem</td></tr><tr><td align="right"></td><td align="right">Advanced</td><td align="right">Line graphs of bipartite graphs</td><td align="right">Line graphs of bipartite graphs</td></tr><tr><td align="right"></td><td align="right">Advanced</td><td align="right">Chordal graphs</td><td align="right">Chordal graphs</td></tr><tr><td align="right"></td><td align="right">Advanced</td><td align="right">Complements of the above</td><td align="right">Complements of the above</td></tr><tr><td align="right"></td><td align="right">Advanced</td><td align="right">Perfect Graph Theorem</td><td align="right">Perfect Graph Theorem</td></tr><tr><td align="right"></td><td align="right">Advanced</td><td align="right">Dilworth&#39;s theorem</td><td align="right">Dilworth&#39;s theorem</td></tr><tr><td align="right"></td><td align="right">Advanced</td><td align="right">Applications of Ramsey&#39;s theorem</td><td align="right">Applications of Ramsey&#39;s theorem</td></tr><tr><td align="right"></td><td align="right">Advanced</td><td align="right">Lower bound for Ramsey numbers</td><td align="right">Lower bound for Ramsey numbers</td></tr><tr><td align="right"></td><td align="right">Advanced</td><td align="right">Properties of random graphs</td><td align="right">Properties of random graphs</td></tr><tr><td align="right"></td><td align="right">Advanced</td><td align="right">Threshold functions</td><td align="right">Threshold functions</td></tr><tr><td align="right"></td><td align="right">Advanced</td><td align="right">0-1 law</td><td align="right">0-1 law</td></tr></table>
<p>This table gets more into exact topics and concepts to master. They have an associated difficult level and overall topic.  Moreover, this a synthesis of concepts and topics to be covered based on class outlines from:</p>
<ul>
<li><p>COMS W4203: Introduction to Graph Theory &#40;taught by Timothy Sun at Columbia University&#41;</p>
</li>
<li><p>MATH 6014: Graph Theory &#40;taught at Georgia Institute of Technology&#41;</p>
</li>
<li><p>MATH 4022: Introduction to Graph Theory &#40;taught at Georgia Institute of Technology&#41;</p>
</li>
</ul>
<h2 id="how_to_cite">How To Cite</h2>
<p>Zelko, Jacob. <em>Achieving an Undergraduate Level Understanding of Graph Theory</em>. <a href="https://jacobzelko.com/01012023000122-graph-theory-learning">https://jacobzelko.com/01012023000122-graph-theory-learning</a>. December 31 2022.</p>
<h2 id="references">References:</h2>
<p>&#91;1&#93; R. Trudeau, Introduction to Graph Theory, Dover. DOVER PUBLICATIONS, INC., 1994.</p>
<p>&#91;2&#93; N. Hartsfield and Ringel, Pearls in Graph Theory A Comprehensive Introduction. DOVER PUBLICATIONS, INC., 1994.</p>
<h2 id="discussion">Discussion: </h2>
<script>talkyardServerUrl='https://site-vbm8wbc57o.talkyard.net';</script>
<script async defer src="https://c1.ty-cdn.net/-/talkyard-comments.min.js"></script>
<div class="talkyard-comments" data-discussion-id="" style="margin-top: 45px;">
    <noscript>Please enable Javascript to view comments.</noscript>
    <p style="margin-top: 25px; opacity: 0.9; font-size: 96%">Comments powered by
    <a href="https://www.talkyard.io">Talkyard</a>.</p>
</div> ]]>
  </content:encoded>
    
  <pubDate>Sat, 31 Dec 2022 00:00:00 +0000</pubDate>  
  
  
  <atom:author>
    <atom:name>Jacob Zelko</atom:name>
  </atom:author>
        
</item>

<item>
  <title>
    <![CDATA[  DrWatson.jl  ]]>
  </title>
  <link> https://jacobzelko.com/10262020033701-drwatson-pkg/index.html </link>
  <guid> https://jacobzelko.com/10262020033701-drwatson-pkg/index.html </guid>
  <description>
    <![CDATA[  DrWatson is a strong tool for encouraging reproducible science and enforces good project management.  ]]>
  </description>  
  
  <content:encoded>
    <![CDATA[  
<h1>DrWatson.jl</h1>
<p><strong>Date:</strong> October 10 2020</p>
<p><strong>Summary:</strong> DrWatson is a strong tool for encouraging reproducible science and enforces good project management.</p>
<p><strong>Keywords:</strong> ##zettel #julialang #project #management #reproducible #science #archive</p>
<h1>Bibliography</h1>
<p>Not Available</p>
<h1>Table of Contents</h1>
<div class="franklin-toc"><ol><li>How To Cite</li><li>References</li><li>Discussion: </li></ol></div>
<p>Today, I spent some time learning about DrWatson.jl. I have always wanted to use the project and now I finally have a reason to work with it&#33; I enjoyed the default layout provided by DrWatson - here are some general thoughts on the matter.</p>
<p>The project directory provided by DrWatson is automatically setup. The defaults are quite nice and I did not change anything except for ignoring the data files:</p>
<pre><code class="language-julia">│projectdir          &lt;- Project&#39;s main folder. It is initialized as a Git
│                       repository with a reasonable .gitignore file.
│
├── _research        &lt;- WIP scripts, code, notes, comments,
│   |                   to-dos and anything in an alpha state.
│   └── tmp          &lt;- Temporary data folder.
│
├── data             &lt;- **Immutable and add-only&#33;**
│   ├── sims         &lt;- Data resulting directly from simulations.
│   ├── exp_pro      &lt;- Data from processing experiments.
│   └── exp_raw      &lt;- Raw experimental data.
│
├── plots            &lt;- Self-explanatory.
├── notebooks        &lt;- Jupyter, Weave or any other mixed media notebooks.
│
├── papers           &lt;- Scientific papers resulting from the project.
│
├── scripts          &lt;- Various scripts, e.g. simulations, plotting, analysis,
│   │                   The scripts use the &#96;src&#96; folder for their base code.
│   └── intro.jl     &lt;- Simple file that uses DrWatson and uses its greeting.
│
├── src              &lt;- Source code for use in this project. Contains functions,
│                       structures and modules that are used throughout
│                       the project and in multiple scripts.
│
├── README.md        &lt;- Optional top-level README for anyone using this project.
├── .gitignore       &lt;- by default ignores _research, data, plots, videos,
│                       notebooks and latex-compilation related files.
│
├── Manifest.toml    &lt;- Contains full list of exact package versions used currently.
└── Project.toml     &lt;- Main project file, allows activation and installation.
                        Includes DrWatson by default.</code></pre>
<p>I started DrWatson up in my Julia REPL and ran the following as I already had a git repo set-up and files in the repo:</p>
<pre><code class="language-julia">using DrWatson
initialize_project&#40;&quot;NeuriViz&quot;; authors &#61; &#91;&quot;Jacob Zelko&quot;, &quot;Zachary P Christensen&quot;&#93;, force &#61; false, git &#61; false, placeholder &#61; true&#41;</code></pre>
<p>It set up the structure I needed and was quite easy to use. DrWatson was created by George Datseris.</p>
<h2 id="how_to_cite">How To Cite</h2>
<p>Zelko, Jacob. <em>DrWatson.jl</em>. <a href="https://jacobzelko.com/10262020033701-drwatson-pkg">https://jacobzelko.com/10262020033701-drwatson-pkg</a>. October 10 2020.</p>
<h2 id="references">References</h2>
<h2 id="discussion">Discussion: </h2>
<script>talkyardServerUrl='https://site-vbm8wbc57o.talkyard.net';</script>
<script async defer src="https://c1.ty-cdn.net/-/talkyard-comments.min.js"></script>
<div class="talkyard-comments" data-discussion-id="" style="margin-top: 45px;">
    <noscript>Please enable Javascript to view comments.</noscript>
    <p style="margin-top: 25px; opacity: 0.9; font-size: 96%">Comments powered by
    <a href="https://www.talkyard.io">Talkyard</a>.</p>
</div> ]]>
  </content:encoded>
    
  <pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate>  
  
  
  <atom:author>
    <atom:name>Jacob Zelko</atom:name>
  </atom:author>
        
</item>
</channel></rss>